// resources/js/Utils/orderComments.ts
import { EnumOrderStatus, IOrder } from "@/Types/orders";
import { getTransportByOrder, TransportConfig } from './transportMappings';
// import { TransportCodes } from "@/Types/transport";

export const generateStatusComment = (
  status: EnumOrderStatus,
  order: IOrder,
  customData?: {
    trackNumber?: string;
    driverInfo?: string;
    expectedDate?: string;
  }
): string => {
  const today = new Date();
  const tomorrow = new Date(today);
  tomorrow.setDate(tomorrow.getDate() + 1);
  
  const formatDate = (date: Date) => date.toLocaleDateString('ru-RU');

  // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –¥–æ—Å—Ç–∞–≤–∫–µ –ø–æ ID
  const transport = getTransportByOrder(order);
  
  switch (status) {
    case EnumOrderStatus.READY_TO_BE_DISPATCHED:
      switch (transport?.code) {
        case 'post':
          return `–ó–∞–∫–∞–∑ —É–ø–∞–∫–æ–≤–∞–Ω. –ì–æ—Ç–æ–≤ –∫ –ø–µ—Ä–µ–¥–∞—á–µ –≤ –¥–æ—Å—Ç–∞–≤–∫—É –ü–æ—á—Ç–æ–π –†–æ—Å—Å–∏–∏. –†–∞—Å—á—ë—Ç–Ω–∞—è –¥–∞—Ç–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ ${formatDate(today)}-${formatDate(tomorrow)}`;
        
        case 'local':
          return `–ó–∞–∫–∞–∑ —É–∫–æ–º–ø–ª–µ–∫—Ç–æ–≤–∞–Ω –∏ —Å–æ–±—Ä–∞–Ω –Ω–∞ —Å–∫–ª–∞–¥–µ. –ì–æ—Ç–æ–≤ –∫ –ø–µ—Ä–µ–¥–∞—á–µ –≤ –¥–æ—Å—Ç–∞–≤–∫—É –ø–æ –≥–æ—Ä–æ–¥—É —Å—Ä–µ–¥—Å—Ç–≤–∞–º–∏ –ø—Ä–æ–¥–∞–≤—Ü–∞.`;
        
        case 'pickup':
          return `–ó–∞–∫–∞–∑ —Å–æ–±—Ä–∞–Ω –∏ —É–∫–æ–º–ø–ª–µ–∫—Ç–æ–≤–∞–Ω. –ì–æ—Ç–æ–≤ –∫ –≤—ã–¥–∞—á–µ/–ø–æ–ª—É—á–µ–Ω–∏—é –Ω–∞ —Å–∫–ª–∞–¥–µ –ø—Ä–æ–¥–∞–≤—Ü–∞.`;
        
        default:
          return `–ó–∞–∫–∞–∑ –≥–æ—Ç–æ–≤ –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ. –†–∞—Å—á–µ—Ç–Ω–∞—è –¥–∞—Ç–∞ –ø–µ—Ä–µ–¥–∞—á–∏ –≤ —Å–ª—É–∂–±—É –¥–æ—Å—Ç–∞–≤–∫–∏: ${formatDate(today)}-${formatDate(tomorrow)}`;
      }

    case EnumOrderStatus.SHIPPED:
      const expectedDate = customData?.expectedDate;

      switch (transport?.code) {
        case 'post':
            return  expectedDate ? `–ó–∞–∫–∞–∑ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω. –í –ø—É—Ç–∏. –û–∂–∏–¥–∞–µ–º–∞—è –¥–∞—Ç–∞ –¥–æ—Å—Ç–∞–≤–∫–∏ ‚Äì ${expectedDate}.` : '–ó–∞–∫–∞–∑ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω. –í –ø—É—Ç–∏. –ü–æ—á—Ç–∞ –æ–±–µ—â–∞–µ—Ç –¥–æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞–∫–∞–∑...';
        
        case 'local':
            return  expectedDate ? `–ó–∞–∫–∞–∑ –ø–µ—Ä–µ–¥–∞–Ω –≤ –∫—É—Ä—å–µ—Ä—Å–∫—É—é —Å–ª—É–∂–±—É. –û–∂–∏–¥–∞–µ–º–∞—è –¥–∞—Ç–∞ –¥–æ—Å—Ç–∞–≤–∫–∏ ‚Äì ${expectedDate}.` : '–ó–∞–∫–∞–∑ –ø–µ—Ä–µ–¥–∞–Ω –≤ –∫—É—Ä—å–µ—Ä—Å–∫—É—é —Å–ª—É–∂–±—É.';
        
        case 'pickup':
            return `–ó–∞–∫–∞–∑ –≥–æ—Ç–æ–≤ –∫ –≤—ã–¥–∞—á–µ. –ú–æ–∂–µ—Ç–µ –∑–∞–±—Ä–∞—Ç—å –µ–≥–æ –≤ –ø—É–Ω–∫—Ç–µ —Å–∞–º–æ–≤—ã–≤–æ–∑–∞.`;

        default:
          return  expectedDate ? `–ó–∞–∫–∞–∑ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω. –í –ø—É—Ç–∏. –û–∂–∏–¥–∞–µ–º–∞—è –¥–∞—Ç–∞ –¥–æ—Å—Ç–∞–≤–∫–∏ ‚Äì ${expectedDate}.` : '–ó–∞–∫–∞–∑ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω. –í –ø—É—Ç–∏';
      }

    case EnumOrderStatus.DELIVERED:

      switch (transport?.code) {
        case 'post':
            return  '–û–∂–∏–¥–∞–µ—Ç –∞–¥—Ä–µ—Å–∞—Ç–∞ –≤ –º–µ—Å—Ç–µ –≤—Ä—É—á–µ–Ω–∏—è. –ì–æ—Ç–æ–≤ –∫ –≤—ã–¥–∞—á–µ/–ø–æ–ª—É—á–µ–Ω–∏—é';
        
        case 'local':
            return  '–û–∂–∏–¥–∞–µ—Ç —Ä–∞–∑–≥—Ä—É–∑–∫–∏/–ü–æ–ª—É—á–µ–Ω–∏—è';
        
        default:
          return  '–ó–∞–∫–∞–∑ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω';
      }

    default:
      return '';
  }
};

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è —Å–ª—É–∂–±—ã –¥–æ—Å—Ç–∞–≤–∫–∏
export const getDeliveryServiceName = (order: IOrder): string => {
  const transport = getTransportByOrder(order);
  
  switch (transport?.code) {
    case 'post':
      return '–ü–æ—á—Ç–æ–π –†–æ—Å—Å–∏–∏';
    case 'local':
      return '–∫—É—Ä—å–µ—Ä—Å–∫–æ–π —Å–ª—É–∂–±–æ–π –ø—Ä–æ–¥–∞–≤—Ü–∞';
    case 'pickup':
      return '—Å–∞–º–æ–≤—ã–≤–æ–∑–æ–º';
    default:
      return '—Å–ª—É–∂–±–æ–π –¥–æ—Å—Ç–∞–≤–∫–∏';
  }
};

export const generateTrackingComment = (
  trackNumber: string, 
  driverInfo?: { name: string; carNumber: string; phone: string }
): string => {
  let comment = `–ù–æ–º–µ—Ä –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –¥–æ—Å—Ç–∞–≤–∫–∏ –Ω–∞ —Å–∞–π—Ç–µ –ü–æ—á—Ç—ã –†–æ—Å—Å–∏–∏: <a href="https://www.pochta.ru/tracking?barcode=${trackNumber}" target="_blank">${trackNumber}</a>`;
  
  if (driverInfo) {
    comment += ` (–î–ª—è –¥–æ—Å—Ç–∞–≤–∫–∏ –∑–∞–∫–∞–∑–∞ –í–∞–º –Ω–∞–∑–Ω–∞—á–µ–Ω –≤–æ–¥–∏—Ç–µ–ª—å: ${driverInfo.name}, –Ω–æ–º–µ—Ä –º–∞—à–∏–Ω—ã ${driverInfo.carNumber}, —Ç–µ–ª–µ—Ñ–æ–Ω: ${driverInfo.phone})`;
  }
  
  return comment;
};

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
export const debugTransportInfo = (order: IOrder) => {
  const transport = getTransportByOrder(order);
  console.log('üöö Transport debug:', {
    orderId: order.id,
    transportId: order.order_transport_id,
    transportData: transport
  });
  return transport;
};